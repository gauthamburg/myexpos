loadi(63,13);
loadi(64,14);

loadi(65,7);
loadi(66,8);

loadi(22,35);
loadi(23,36);

loadi(2,15);
loadi(3,16);

loadi(4,17);
loadi(5,18);

loadi(16,29);
loadi(17,30);

loadi(69,11);
loadi(70,12);

loadi (85,69);

PTBR=PTBR+20;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

alias PCT R5;
PCT = PROCESS_TABLE;

[PCT + 1*16 + 1] = 1;
[PCT + 1*16 + 4] = CREATED;
[PCT + 1*16 + 11] = 80;
[PCT + 1*16 + 12] = 0;
[PCT + 1*16 + 13] = 8*512;
[PCT + 1*16 + 14] = PTBR;
[PCT + 1*16 + 15] = 10;
[76*512]=[65*512 + 1];

PTBR=PAGE_TABLE_BASE + 40;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

[PTBR+4]=83;
[PTBR+5]="0110";
[PTBR+6]=84;
[PTBR+7]="0110";

[PTBR+8]=85;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0000";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

[PTBR+16]=86;
[PTBR+17]="0110";
[PTBR+18]=87;
[PTBR+19]="0110";

alias PTH R7;
PTH = PROCESS_TABLE + 2*16;
[PTH + 1]=2;
[PTH + 4]=CREATED;
[PTH + 11]=88;
[PTH + 12]=0;
[PTH + 13]=8*512;
[PTH + 14]=PTBR;
[PTH + 15]=PTLR;
[86*512]=[85*512 + 1];

[PROCESS_TABLE + 3*16 + 4] = TERMINATED;
[PROCESS_TABLE + 4*16 + 4] = TERMINATED;
[PROCESS_TABLE + 5*16 + 4] = TERMINATED;
[PROCESS_TABLE + 6*16 + 4] = TERMINATED;
[PROCESS_TABLE + 7*16 + 4] = TERMINATED;
[PROCESS_TABLE + 8*16 + 4] = TERMINATED;
[PROCESS_TABLE + 9*16 + 4] = TERMINATED;
[PROCESS_TABLE + 10*16 + 4] = TERMINATED;
[PROCESS_TABLE + 11*16 + 4] = TERMINATED;
[PROCESS_TABLE + 12*16 + 4] = TERMINATED;
[PROCESS_TABLE + 13*16 + 4] = TERMINATED;
[PROCESS_TABLE + 14*16 + 4] = TERMINATED;
[PROCESS_TABLE + 15*16 + 4] = TERMINATED;


return;
